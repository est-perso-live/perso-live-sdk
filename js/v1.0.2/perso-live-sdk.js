var PersoLiveSDK=function(){"use strict";function t(){}function e(t){return t()}function s(){return Object.create(null)}function a(t){t.forEach(e)}function n(t){return"function"==typeof t}function r(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function i(t){t.parentNode&&t.parentNode.removeChild(t)}let o;function c(t){o=t}const h=[],d=[];let l=[];const u=[],g=Promise.resolve();let p=!1;function f(t){l.push(t)}const m=new Set;let w=0;function y(){if(0!==w)return;const t=o;do{try{for(;w<h.length;){const t=h[w];w++,c(t),v(t.$$)}}catch(t){throw h.length=0,w=0,t}for(c(null),h.length=0,w=0;d.length;)d.pop()();for(let t=0;t<l.length;t+=1){const e=l[t];m.has(e)||(m.add(e),e())}l.length=0}while(h.length);for(;u.length;)u.pop()();p=!1,m.clear(),c(t)}function v(t){if(null!==t.fragment){t.update(),a(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(f)}}const S=new Set;function $(t,e){const s=t.$$;null!==s.fragment&&(!function(t){const e=[],s=[];l.forEach((a=>-1===t.indexOf(a)?e.push(a):s.push(a))),s.forEach((t=>t())),l=e}(s.after_update),a(s.on_destroy),s.fragment&&s.fragment.d(e),s.on_destroy=s.fragment=null,s.ctx=[])}function T(t,e){-1===t.$$.dirty[0]&&(h.push(t),p||(p=!0,g.then(y)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function E(r,h,d,l,u,g,p,m=[-1]){const w=o;c(r);const v=r.$$={fragment:null,ctx:[],props:g,update:t,not_equal:u,bound:s(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(h.context||(w?w.$$.context:[])),callbacks:s(),dirty:m,skip_bound:!1,root:h.target||w.$$.root};p&&p(v.root);let $=!1;if(v.ctx=d?d(r,h.props||{},((t,e,...s)=>{const a=s.length?s[0]:e;return v.ctx&&u(v.ctx[t],v.ctx[t]=a)&&(!v.skip_bound&&v.bound[t]&&v.bound[t](a),$&&T(r,t)),e})):[],v.update(),$=!0,a(v.before_update),v.fragment=!!l&&l(v.ctx),h.target){if(h.hydrate){const t=(b=h.target,Array.from(b.childNodes));v.fragment&&v.fragment.l(t),t.forEach(i)}else v.fragment&&v.fragment.c();h.intro&&((E=r.$$.fragment)&&E.i&&(S.delete(E),E.i(L))),function(t,s,r,i){const{fragment:o,after_update:c}=t.$$;o&&o.m(s,r),i||f((()=>{const s=t.$$.on_mount.map(e).filter(n);t.$$.on_destroy?t.$$.on_destroy.push(...s):a(s),t.$$.on_mount=[]})),c.forEach(f)}(r,h.target,h.anchor,h.customElement),y()}var E,L,b;c(w)}class L{$destroy(){$(this,1),this.$destroy=t}$on(e,s){if(!n(s))return t;const a=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return a.push(s),()=>{const t=a.indexOf(s);-1!==t&&a.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}function b(t,e,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!a:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(t):a?a.value:e.get(t)}"function"==typeof SuppressedError&&SuppressedError;class M extends Error{constructor(){super("Too many requests")}}class I extends Error{constructor(){super("Request timeout")}}class C extends Error{constructor(){super("Invalid Api key")}}var _,P,k;class x extends EventTarget{static async createSessionId(t,e,s,a,n,r,i,o){const c=await fetch(`${t}/api/v1/session/`,{body:JSON.stringify({llm_type:s,tts_type:a,model_style:n,prompt:r,document:i,background_image:o}),headers:{"PersoLive-APIKey":e,"Content-Type":"application/json"},method:"POST"});if(!c.ok)throw new C;return(await c.json()).session_id}static async getIceServers(t,e,s){const a=await fetch(`${t}/api/v1/session/${s}/ice-servers/`,{headers:{"PersoLive-APIKey":e},method:"GET"});if(!a.ok)throw new C;return(await a.json()).ice_servers}static async create(t,e,s,a,n,r){let i=await x.createPeerConnection(e),o=i.createDataChannel("message",{protocol:"message"}),c=new x(i,o);a.getTracks().forEach((function(t){i.addTrack(t,a)}));const h=i.addTransceiver("video",{direction:"recvonly"}),d=RTCRtpReceiver.getCapabilities("video");null!==d&&h.setCodecPreferences(d.codecs.filter((t=>"video/VP8"===t.mimeType)));const l=await i.createOffer();await i.setLocalDescription(l);const u=await fetch(`${t}/api/v1/session/${s}/exchange/`,{body:JSON.stringify({client_sdp:l}),headers:{"Content-Type":"application/json"},method:"POST"});if(!u.ok)throw new M;const g=await u.json();await i.setRemoteDescription(g.server_sdp);try{await x.waitFor((()=>c.isReady()),100,50),c.changeSize(n,r)}catch(t){throw new M}return c}static async createPeerConnection(t){return new RTCPeerConnection({sdpSemantics:"unified-plan",iceServers:t})}static async waitFor(t,e,s){let a=0;if(await new Promise((n=>{const r=setInterval((()=>{a+=1,a>=s&&(clearInterval(r),n("bad")),t()&&(clearInterval(r),n("good"))}),e)})),a>=s)throw new I}constructor(t,e){super(),_.add(this),this.pc=t,this.dc=e,this.streams=[],P.set(this,null),this.pingIntervalId=null,this.pingTime=Date.now()+3e3,this.pc.addEventListener("track",(t=>{this.streams=this.streams.concat(t.streams)})),this.pc.addEventListener("connectionstatechange",(()=>{"disconnected"!==this.pc.connectionState&&"failed"!==this.pc.connectionState&&"closed"!==this.pc.connectionState||this.close()})),this.dc.onopen=()=>{this.pingIntervalId=setInterval((()=>{this.ping(),Date.now()-this.pingTime>5e3&&this.close()}),1e3)},this.dc.onclose=()=>{null!=this.pingIntervalId&&clearInterval(this.pingIntervalId)},b(this,_,"m",k).call(this,{live:!0,code:200,reason:"OK"}),this.setMessageCallback("ping",(()=>{this.pingTime=Date.now()}))}isReady(){return this.streams.length>0&&"open"===this.dc.readyState}subscribeStatus(t){return null!==b(this,P,"f")&&t(new CustomEvent("status",{detail:b(this,P,"f")})),this.addEventListener("status",t),()=>{this.removeEventListener("status",t)}}getStream(){return this.streams[0]}sendMessage(t,e){this.dc.send(JSON.stringify({type:t,data:e}))}sendFile(t,e=16384){return new Promise((async s=>{let a=new Uint8Array(await t.arrayBuffer()),n=this.pc.createDataChannel("file",{protocol:"file"});n.addEventListener("message",(t=>{if(0===t.data.length){let t=0;for(;t<a.length;)n.send(a.slice(t,t+e)),t+=e;n.send(new Uint8Array(0))}else n.close(),s(t.data)}))}))}chat(t,e){this.sendMessage("chat",{message:t,history:e})}ttstf(t){this.sendMessage("ttstf",{message:t})}async stf(t,e,s){let a=await this.sendFile(t);this.sendMessage("stf",{message:s,file_ref:a,format:e})}hello(){this.sendMessage("hello",{})}recordStart(){this.sendMessage("record-start",{})}recordEndStt(t){this.sendMessage("record-end-stt",{language:t})}recordEndTranslate(t,e){this.sendMessage("record-end-translate",{src_lang:t,dst_lang:e})}changeSize(t,e){this.sendMessage("change-size",{width:t,height:e})}setTemplate(t,e){this.sendMessage("set-template",{model:t,dress:e})}clearBuffer(){this.sendMessage("clear-buffer",{})}ping(){this.sendMessage("ping",{})}setMessageCallback(t,e){const s=s=>{const a=JSON.parse(s.data);a.type===t&&e(a.data)};return this.dc.addEventListener("message",s),()=>{this.dc.removeEventListener("message",s)}}close(){this.dc.close(),this.pc.close(),b(this,_,"m",k).call(this,{live:!1,code:408,reason:"Request Timeout"})}closeSelf(){this.dc.close(),this.pc.close(),b(this,_,"m",k).call(this,{live:!1,code:200,reason:"OK"})}}P=new WeakMap,_=new WeakSet,k=function(t){this.dispatchEvent(new CustomEvent("status",{detail:t})),function(t,e,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===a?n.call(t,s):n?n.value=s:e.set(t,s)}(this,P,t,"f")};class j{setMicStatus(t){this.micStatusHandler.dispatchEvent(new CustomEvent("status",{detail:{status:t}}))}subscribeMicStatus(t){const e=e=>{t(e.detail.status)};return this.micStatusHandler.addEventListener("status",e),()=>{this.micStatusHandler.removeEventListener("status",e)}}subscribeChatLog(t){const e=e=>{t(e.detail.chatLog)};return this.chatLogHandler.addEventListener("chatLog",e),()=>{this.chatLogHandler.removeEventListener("chatLog",e)}}subscribeSessionStatus(t){return this.perso.subscribeStatus((e=>{t(e.detail)}))}constructor(t,e,s){this.sessionId=t,this.stream=e,this.perso=s,this.chatLog=[],this.micStatusHandler=new EventTarget,this.chatLogHandler=new EventTarget,s.setMessageCallback("stf",(t=>{this.addMessageToChatLog(t.message,!1),this.setMicStatus(3),setTimeout((()=>{this.setMicStatus(0)}),t.duration+3500)})),s.setMessageCallback("stt",(t=>{this.processChat(t.text)})),s.setMessageCallback("stt-error",(t=>{this.setMicStatus(0)})),s.setMessageCallback("translate-error",(t=>{this.setMicStatus(0)}))}addMessageToChatLog(t,e){this.chatLog=[{text:t,isUser:e,timestamp:new Date},...this.chatLog],this.chatLogHandler.dispatchEvent(new CustomEvent("chatLog",{detail:{chatLog:this.chatLog}}))}getSessionId(){return this.sessionId}getHistory(){return this.chatLog.map((t=>({content:t.text,role:t.isUser?"Human":"AI"}))).reverse()}async processChat(t){this.setMicStatus(2),this.perso.chat(t,this.getHistory()),this.addMessageToChatLog(t,!0)}processTTSTF(t){this.setMicStatus(2),this.perso.ttstf(t)}processSTF(t,e,s){this.perso.stf(t,e,s),this.addMessageToChatLog(s,!1)}intro(){this.setMicStatus(2),this.perso.hello()}startVoiceChat(){return this.setMicStatus(1),this.perso.recordStart()}stopVoiceChat(){return this.setMicStatus(2),this.perso.recordEndStt()}changeSize(t,e){return this.perso.changeSize(t,e)}setMessageCallback(t,e){return this.perso.setMessageCallback(t,e)}setTemplate(t,e){return this.perso.setTemplate(t,e)}clearBuffer(){return this.setMicStatus(0),this.perso.clearBuffer()}setSrc(t){t.srcObject=this.getRemoteStream()}getLocalStream(){return this.stream}getRemoteStream(){return this.perso.getStream()}stopSession(){this.close(!0)}close(t){t?this.perso.closeSelf():this.perso.close()}}const A=x.createSessionId,D=x.getIceServers;class O{static async getLLMs(t,e){const s=fetch(`${t}/api/v1/settings/llm_type/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}static async getModelStyles(t,e){const s=fetch(`${t}/api/v1/settings/modelstyle/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}static async getBackgroundImages(t,e){const s=fetch(`${t}/api/v1/background_image/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}static async getTTSs(t,e){const s=fetch(`${t}/api/v1/settings/tts_type/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}static async getPrompts(t,e){const s=fetch(`${t}/api/v1/prompt/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}static async getDocuments(t,e){const s=fetch(`${t}/api/v1/document/`,{headers:{"PersoLive-APIKey":e},method:"GET"}),a=await s;return await a.json()}}function H(t,e,s){async function a(t,e){return await O.getLLMs(t,e)}async function n(t,e){return await O.getTTSs(t,e)}async function r(t,e){return await O.getModelStyles(t,e)}async function i(t,e){return await O.getBackgroundImages(t,e)}async function o(t,e){return await O.getPrompts(t,e)}async function c(t,e){return await O.getDocuments(t,e)}return[a,n,r,i,o,c,async function(t,e){let s,h,d,l,u,g;try{s=await a(t,e),h=await r(t,e),d=await i(t,e),l=await n(t,e),u=await o(t,e),g=await c(t,e)}catch(t){throw new C}return{llms:s,ttsTypes:l,modelStyles:h,backgroundImages:d,prompts:u,documents:g}},async function(t,e,s,a,n,r,i,o){return await A(t,e,s,a,n,r,i,o)},async function(t,e,s){return await D(t,e,s)},async function(t,e,s,a,n){return await(async(t,e,s,a,n)=>{let r=await navigator.mediaDevices.getUserMedia({audio:!0,video:!1}),i=await x.create(t,e,s,r,a,n);return new j(s,r,i)})(t,e,s,a,n)}]}return new class extends L{constructor(t){super(),E(this,t,H,null,r,{getLLMs:0,getTTSs:1,getModelStyles:2,getBackgroundImages:3,getPrompts:4,getDocuments:5,getAllSettings:6,createSessionId:7,getIceServers:8,createSession:9})}get getLLMs(){return this.$$.ctx[0]}get getTTSs(){return this.$$.ctx[1]}get getModelStyles(){return this.$$.ctx[2]}get getBackgroundImages(){return this.$$.ctx[3]}get getPrompts(){return this.$$.ctx[4]}get getDocuments(){return this.$$.ctx[5]}get getAllSettings(){return this.$$.ctx[6]}get createSessionId(){return this.$$.ctx[7]}get getIceServers(){return this.$$.ctx[8]}get createSession(){return this.$$.ctx[9]}}({target:document})}();
